{"version":3,"sources":["Contents/Count.js","App.js","reportWebVitals.js","index.js"],"names":["Count","props","handleMinuteChange1","event","setState","minute_1","target","value","handleMinuteChange2","minute_2","handleSecondChange1","second_1","handleSecondChange2","second_2","Add","parseInt","state","console","log","minuteInput","React","createRef","this","current","focus","className","onChange","ref","type","onClick","Number","toFixed","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAoGeA,E,kDAhGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZC,SAAUF,EAAMG,OAAOC,SARR,EAYnBC,oBAAsB,SAACL,GACrB,EAAKC,SAAS,CACZK,SAAUN,EAAMG,OAAOC,SAdR,EAkBnBG,oBAAsB,SAACP,GACrB,EAAKC,SAAS,CACZO,SAAUR,EAAMG,OAAOC,SApBR,EAwBnBK,oBAAsB,SAACT,GACrB,EAAKC,SAAS,CACZS,SAAUV,EAAMG,OAAOC,SA1BR,EA8BnBO,IAAM,WACJ,EAAKV,SAAS,CACZC,SAAUU,SAAS,EAAKC,MAAMX,UAAYU,SAAS,EAAKC,MAAMP,UAC9DE,SAAUI,SAAS,EAAKC,MAAML,UAAYI,SAAS,EAAKC,MAAMH,YAEhEI,QAAQC,IAAI,YAAa,EAAKF,MAAMX,UACpCY,QAAQC,IAAI,YAAa,EAAKF,MAAMP,UACpCQ,QAAQC,IAAI,YAAa,EAAKF,MAAML,UACpCM,QAAQC,IAAI,YAAa,EAAKF,MAAMH,WApCpC,EAAKG,MAAQ,CAAEX,SAAU,EAAGI,SAAU,EAAGE,SAAU,EAAGE,SAAU,GAChE,EAAKM,YAAcC,IAAMC,YAHR,E,qDAyCnB,WACEC,KAAKH,YAAYI,QAAQC,U,oBAG3B,WACE,MAAmDF,KAAKN,MAAhDX,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,SAAUE,EAA5B,EAA4BA,SAAUE,EAAtC,EAAsCA,SACtC,OACE,gCACE,qBAAKY,UAAU,UAAf,SACE,6BACE,iDAGJ,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,gCACE,uBACEA,UAAU,YACVlB,MAAOE,EACPiB,SAAUJ,KAAKd,oBACfmB,IAAKL,KAAKH,cAEZ,kCACA,uBACEM,UAAU,YACVlB,MAAOM,EACPa,SAAUJ,KAAKV,yBAGnB,8BACE,wBAAQa,UAAU,MAAMG,KAAK,SAASC,QAASP,KAAKR,IAApD,wBAMN,qBAAKW,UAAU,aAAf,SACE,sBAAKA,UAAU,aAAf,UACE,0CAAaV,UAAqB,GAAXV,EAAgBM,GAAY,GAAK,OACxD,4CAAeI,UAAqB,GAAXV,EAAgBM,GAAY,OACrD,4CAA0B,GAAXN,EAAgBM,KAC/B,+CACgBI,SAASV,EAAW,IADpC,KAC2C,IACxCU,UAAsB,GAAXV,EAAgBM,GAAY,GAAM,IAFhD,KAEuD,KACxC,GAAXN,EAAgBM,GAAY,MAEhC,gDAAmBmB,QAAoB,GAAXzB,EAAgBM,GAAY,GAAM,GAAGoB,QAAQ,WAG7E,qBAAKN,UAAU,SAAf,2C,GA3FYL,IAAMY,WCSXC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCKSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fed2c66c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Count.css\";\r\n\r\nclass Count extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { minute_1: 0, minute_2: 0, second_1: 0, second_2: 0 };\r\n    this.minuteInput = React.createRef();\r\n  }\r\n\r\n  handleMinuteChange1 = (event) => {\r\n    this.setState({\r\n      minute_1: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleMinuteChange2 = (event) => {\r\n    this.setState({\r\n      minute_2: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSecondChange1 = (event) => {\r\n    this.setState({\r\n      second_1: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSecondChange2 = (event) => {\r\n    this.setState({\r\n      second_2: event.target.value,\r\n    });\r\n  };\r\n\r\n  Add = () => {\r\n    this.setState({\r\n      minute_1: parseInt(this.state.minute_1) + parseInt(this.state.minute_2),\r\n      second_1: parseInt(this.state.second_1) + parseInt(this.state.second_2),\r\n    });\r\n    console.log(\"minute_1-\", this.state.minute_1);\r\n    console.log(\"minute_2-\", this.state.minute_2);\r\n    console.log(\"second_1-\", this.state.second_1);\r\n    console.log(\"second_2-\", this.state.second_2);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.minuteInput.current.focus();\r\n  }\r\n\r\n  render() {\r\n    const { minute_1, minute_2, second_1, second_2 } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"heading\">\r\n          <h1>\r\n            <b>Line Counter</b>\r\n          </h1>\r\n        </div>\r\n        <div className=\"leftPlane\">\r\n          <div className=\"leftPanel\">\r\n            <div>\r\n              <input\r\n                className=\"minuteBox\"\r\n                value={minute_2}\r\n                onChange={this.handleMinuteChange2}\r\n                ref={this.minuteInput}\r\n              />\r\n              <b>:</b>\r\n              <input\r\n                className=\"secondBox\"\r\n                value={second_2}\r\n                onChange={this.handleSecondChange2}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button className=\"add\" type=\"submit\" onClick={this.Add}>\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rightPlane\">\r\n          <div className=\"rightPanel\">\r\n            <h2>Hours - {parseInt((minute_1 * 60 + second_1) / 60 / 60)}</h2>\r\n            <h2>Minutes - {parseInt((minute_1 * 60 + second_1) / 60)}</h2>\r\n            <h2>Seconds - {minute_1 * 60 + second_1}</h2>\r\n            <h2>\r\n              Total Time - {parseInt(minute_1 / 60)} :{\" \"}\r\n              {parseInt(((minute_1 * 60 + second_1) / 60) % 60)} :{\" \"}\r\n              {(minute_1 * 60 + second_1) % 60}\r\n            </h2>\r\n            <h2>Total Lines - {Number(((minute_1 * 60 + second_1) / 60) * 8).toFixed(2)}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">By Anudeep Reddy Raavi</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Count;\r\n","import './App.css';\nimport Count from './Contents/Count';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Count/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}